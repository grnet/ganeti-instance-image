#!/bin/bash

# Copyright (C) 2010, 2011, 2012 Oregon State University
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e
. ./common.sh
debug set -x

# TODO: optimise some things based on INSTANCE_REINSTALL=1

RUN_PARTS="`which run-parts`"
case "$IMAGE_TYPE" in
    tarball)
        IMG_EXT='.tar.gz'
        ;;
    qemu)
        IMG_EXT='.img'
        ;;
    dump)
        IMG_EXT='-root.dump'
        ;;
esac
download_imagefile
# workaround restore's non-unique /tmp/rstdir* & /tmp/rstmode*
! test 'dump' = "$IMAGE_TYPE" || use_unique_tmpdir
test 'no' = "$CDINSTALL" || exit 0
losetup_blockdev
DISK_SIZE="$(expr `"$BLOCKDEV_CMD" --getsize64 "$BLOCKDEV"` / 1048576 || :)"
if test 'yes' = "$SWAP"; then
    test -n "$SWAP_SIZE" || die 'SWAP_SIZE not set however SWAP is enabled\n'
    test $SWAP_SIZE -le $DISK_SIZE || \
        die 'SWAP_SIZE larger than system disk size:\n  %sMB swap > %sMB system disk\n' "$SWAP_SIZE" "$DISK_SIZE"
fi
test -f "$IMAGE_FILE" || die 'Can'\''t find image file "%s"\n' "$IMAGE_FILE"
case "$IMAGE_TYPE" in
    tarball|dump)
        format_disk0 "$BLOCKDEV"
        ;;
    qemu)
        "$QEMU_IMG" convert "$IMAGE_FILE" -O 'host_device' "$BLOCKDEV" >/dev/null
        ;;
esac
# deploying something like a windows image, skip the rest
! test 'yes' = "$NOMOUNT" || exit 0
if test -n "$RUN_PARTS" && test -d "$PRE_CUSTOMIZE_DIR"; then
    export TARGET SUITE BLOCKDEV IMAGE_TYPE
    "$RUN_PARTS" "$PRE_CUSTOMIZE_DIR"
fi
map_all
case "$IMAGE_TYPE" in
    tarball|dump)
        mkfs_disk0
        get_uuids
        ;;
esac
mount_disk0 'temp'
case "$IMAGE_TYPE" in
    tarball)
        tar pzxf "$IMAGE_FILE" -C "$TARGET"
        ;;
    dump)
        root_dump="$IMAGE_FILE"
        ( cd "$TARGET" && restore -r -y -f "$root_dump" >/dev/null )
        if test -n "$boot_dev"; then
            boot_dump="${IMAGE_FILE%root.dump}boot.dump"
            test -f "$boot_dump" || die 'Can'\''t find image file: %s\n' "$boot_dump"
            ( cd "${TARGET}/boot" && restore -r -y -f "$boot_dump" >/dev/null )
        fi
        ;;
esac
case "$IMAGE_TYPE" in
    tarball|dump)
        setup_fstab
        ;;
esac
! test 'True' = "$INSTANCE_HV_serial_console" || setup_console
filesystem_relabel
if test -n "$RUN_PARTS" && test -d "$CUSTOMIZE_DIR"; then
    ROOT_DEV="$root_dev"; BOOT_DEV="$boot_dev"; IMG_SSH_KEY_URL="$IMG_SSH_KEY_URL"
    export TARGET SUITE BLOCKDEV ROOT_DEV BOOT_DEV IMAGE_TYPE IMG_SSH_KEY_URL
    "$RUN_PARTS" "$CUSTOMIZE_DIR"
fi
