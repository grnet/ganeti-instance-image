#!/bin/bash

# Copyright (C) 2012 Oregon State University
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

test -z "$GANETI_DEBUG" || set -x
IMAGE_DIR=
INSTANCE_NAME=
IMAGE_NAME=
ARCH=
HOSTNAME="`hostname`"

run_help() {
    cat <<EOF
Usage: $0 [-d PATH] [-n NAME] [-a ARCH] -t TYPE -i INSTANCE

Create an image of a ganeti instance using either a tarball, dump, or qemu image..

-t TYPE       Type of image, either: tarball, dump, or qemu-img
-d PATH       Path of where to put the image
-i INSTANCE   Name of the instance
-n NAME       Name of the image
-a ARCH       Architecture of the image

This utility must be used on the master node. All optional args will
have defaults if you do not set them.
EOF
    exit 0
}

while getopts "hd:i:a:n:t:" _opt ; do
    case "$_opt" in
        t)
            TYPE="$OPTARG"
            ;;
        d)
            IMAGE_DIR="-m $OPTARG"
            ;;
        i)
            INSTANCE_NAME="$OPTARG"
            ;;
        n)
            IMAGE_NAME="-n $OPTARG"
            ;;
        a)
            ARCH="-a $OPTARG"
            ;;
        h)
            run_help
            ;;
        *)
            ;;
    esac
done

#test -n "$IMAGE_DIR" || { printf 'Error: Image path not set\n'; exit 1; }
test -n "$INSTANCE_NAME" || { printf 'Error: Instance name not set\n'; exit 1; }
test -n "$TYPE" || printf 'Error: Image type not set\n'; exit 1; }

case "$TYPE" in
    tarball|dump|qemu)
        :
        ;;
    *)
        printf 'Error: Incorrect type set\n'
        exit 1
        ;;
esac
if ! test "x`gnt-cluster getmaster`" = "x$HOSTNAME"; then
    printf 'ERROR: Command must be run from master node\n'
    exit 1
fi
info="$(gnt-instance list -o os,hypervisor,disk.count,hv/kernel_path --no-headers --separator=' ' "$INSTANCE_NAME")"
OS_VARIANT="${info[0]/*+/}"
HYPERVISOR="${info[1]}"
DISK_COUNT="${info[2]}"
INSTANCE_HV_kernel_path="${info[3]}"
OS_API_VERSION=20
ad_output="$(gnt-instance activate-disks "$INSTANCE_NAME" | sed -e 's/\:/ /g')"
NODE="${ad_output[0]}"
DISK_0_PATH="${ad_output[2]}"
export OS_VARIANT HYPERVISOR DISK_COUNT OS_API_VERSION DISK_0_PATH INSTANCE_HV_kernel_path
printf 'Creating image with type %s from %s in %s from node %s\n' "$TYPE" "$INSTANCE_NAME" "$IMAGE_DIR" from node "$NODE"
if test "x$NODE" = "x$HOSTNAME"; then
    "@osdir@/@osname@/tools/make-image" -i "$INSTANCE_NAME" \
        "$IMAGE_DIR" "$IMAGE_NAME" "$ARCH" -t "$TYPE"
else
    ssh "$NODE" "@osdir@/@osname@/tools/make-image" \
        -i "$INSTANCE_NAME" "$IMAGE_DIR" "$IMAGE_NAME" "$ARCH" -t "$TYPE"
fi

gnt-instance deactivate-disks "$INSTANCE_NAME"
