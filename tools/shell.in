#!/bin/sh

# Copyright (C) 2015 GRNET S.A.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

# presets
MAP=0
MOUNT=0
READONLY=0
INSTANCE_NAME=''
SCRIPT_NAME="$(basename "$0")"

# functions
usage() {
    cat <<EOF
Usage: $SCRIPT_NAME [OPTIONS] INSTANCE_NAME

Drop to shell after setting up disk (with flags to force
mapping/mounting, then unset disks after).

ARGS:
 INSTANCE_NAME  Name of the instance

OPTIONS:
 -h             Help output
 -m             Map partitions
 -M             Mount partitions
 -r             Mount readonly if mounting
EOF
}

croak() { usage >&2; printf "$@" | sed -e "s/^/${SCRIPT_NAME}: /" >&2; exit 1; }

# getopts
while getopts ':mMrh' _opt; do
    case "$_opt" in
        m)
            MAP=1
            ;;
        M)
            MOUNT=1
            ;;
        r)
            READONLY=1
            ;;
        h)
            usage
            exit 0
            ;;
        *)
            croak 'Unknown option "-%s"\n' "$OPTARG"
            ;;
    esac
done
shift `expr $OPTIND - 1 || :`
INSTANCE_NAME="$1"

# sanity checks
test -n "$INSTANCE_NAME" || croak 'Error: INSTANCE_NAME not set\n'
test -n "$DISK_0_PATH" || croak 'Error: DISK_0_PATH not set\n'
test -n "$OS_VARIANT" || croak 'Error: OS_VARIANT not set\n'
test -n "$HYPERVISOR" || croak 'Error: HYPERVISOR not set\n'
test -n "$DISK_COUNT" || croak 'Error: DISK_COUNT not set\n'
test -n "$OS_API_VERSION" || croak 'Error: OS_API_VERSION not set\n'

# source functions
. "@osdir@/@osname@/common.sh"
debug set -x

# main
losetup_blockdev
test 0 -eq $MAP && test 0 -eq $MOUNT || map_all
if test 0 -ne $MOUNT; then
    mkdir_disk0_temp
    mount_disk0 `test 0 -eq $READONLY || printf 'readonly'`
fi
verbprint '"%s" is now setup%s - dropping to shell (type "exit" when finished)\n' \
    "$INSTANCE_NAME" "`test -z "$TARGET" || printf 'at "%s"' "$TARGET"`"
"$SHELL"
verbprint '"%s" finished\n' "$INSTANCE_NAME"
